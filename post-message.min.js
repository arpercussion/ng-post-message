!function(){"use strict";function PostMessageProvider(){var allowedDomains=[];this.setAllowedDomains=function(newAllowedDomains){allowedDomains=newAllowedDomains},this.$get=function($window,$rootScope){function sendMessage(messageName,data,iframeName,domain){var sender,serializedData=serializeData(messageName,data);if(domain){if(-1===allowedDomains.indexOf(domain))throw new Error("Sending messages to domain "+domain+" must be explicitly allowed.")}else domain="*";var iframe=$window.document.querySelector('iframe[name="'+iframeName+'"]');sender=iframe?iframe.contentWindow:$window.parent,sender.postMessage(serializedData,domain)}function onMessage(messageName,callback){callbacks[messageName]||(callbacks[messageName]=[]),callbacks[messageName].push(callback)}function onPostMessage(event){var origin=event.origin;event.data;if(-1===allowedDomains.indexOf(origin))throw new Error("Receiving messages from domain "+origin+" must be explicitly allowed.");var parsedData=parseData(event.data);_.invoke(callbacks[parsedData.messageName],_.call,null,event,parsedData),$rootScope.$digest()}function parseData(data){if(!data||"string"!=typeof data)return{};var parts=data.split(/:(.+)/);return{messageName:parts[0],data:angular.fromJson(parts[1])}}function serializeData(messageName,data){return messageName+":"+angular.toJson(data)}var callbacks={},api={send:sendMessage,on:onMessage};return angular.element(window).bind("message",onPostMessage),api}}angular.module("petarslovic.ng-post-message",[]).provider("PostMessage",PostMessageProvider)}();