!function(){"use strict";function PostMessageProvider(){var allowedDomains=[],debug={on:!1};this.setAllowedDomains=function(newAllowedDomains){allowedDomains=newAllowedDomains},this.debug=function(shouldDebug){debug.on=shouldDebug},this.$get=function($window,$rootScope,$log){function addDomain(domain){var index=allowedDomains.findIndex(function(el){return el.toLowerCase()===domain.toLowerCase()});-1==index&&allowedDomains.push(domain)}function removeDomain(domain){allowedDomains=allowedDomains.filter(function(el){return el.toLowerCase()!==domain.toLowerCase()})}function sendMessage(messageName,data,iframeName,domain){var sender,serializedData=serializeData(messageName,data);if(domain){if(-1===allowedDomains.indexOf(domain))throw new Error("Sending messages to domain "+domain+" must be explicitly allowed.")}else domain="*";var iframe=$window.document.querySelector('iframe[name="'+iframeName+'"]');sender=iframe?iframe.contentWindow:$window.parent,debug.on&&$log.info("ng-post-message: sendMessage",messageName,data,iframeName,domain),sender.postMessage(serializedData,domain)}function onMessage(messageName,callback){return callbacks[messageName]||(callbacks[messageName]=[]),callbacks[messageName].push(callback),debug.on&&$log.info("ng-post-message: registered callback for ",messageName),offMessage(messageName,callback)}function offMessage(messageName,callback){return function(){callbacks[messageName]=_.filter(callbacks[messageName],function(cb){return cb!==callback}),debug.on&&$log.info("ng-post-message: removed callback for",messageName)}}function onPostMessage(event){var origin=event.origin||event.originalEvent&&event.originalEvent.origin||null,data=event.data||event.originalEvent&&event.originalEvent.data||"null";if(-1===allowedDomains.indexOf(origin))throw new Error("Receiving messages from domain "+origin+" must be explicitly allowed.");var parsedData="string"==typeof data?parseData(data):data,messageName=parsedData.messageName||parsedData.message;parsedData.__fromBatarang||callbacks[messageName]&&callbacks[messageName].length&&(debug.on&&$log.info("ng-post-message: onMessage",messageName,parsedData,origin),_.invoke(callbacks[messageName],_.call,null,event,parsedData),$rootScope.$digest())}function parseData(data){if(!data||"string"!=typeof data)return{};var parts=data.split(/:(.+)/);return{messageName:parts[0],data:angular.fromJson(parts[1])}}function serializeData(messageName,data){return messageName+":"+angular.toJson(data)}var callbacks={},api={send:sendMessage,on:onMessage,addDomain:addDomain,removeDomain:removeDomain};return angular.element(window).bind("message",onPostMessage),api}}angular.module("petarslovic.ng-post-message",[]).provider("PostMessage",PostMessageProvider)}();